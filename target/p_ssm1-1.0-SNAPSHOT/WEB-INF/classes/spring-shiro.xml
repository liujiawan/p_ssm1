<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-lazy-init="true">
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.wanhejia.shiro.RetryLimitHashedCredentialsMatcher">
		<!-- hashAlgorithmName必须的，没有默认值。可以有MD5或者SHA-1，如果对密码安全有更高要求可以用SHA-256或者更高。
		这里使用MD5 storedCredentialsHexEncoded默认是true，此时用的是密码加密用的是Hex编码；false时用Base64编码 
		hashIterations迭代次数，默认值是1。 -->
		<constructor-arg ref="cacheManager" />
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="2" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>
	<!-- 1.***********************安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
		<property name="sessionManager" ref="sessionManager"/>
		<!-- 使用下面配置的缓存管理器 -->
		<property name="cacheManager" ref="cacheManager" />
	</bean>
    <!--2.******************.自定义Realm -->
	<bean id="myRealm" class="com.wanhejia.shiro.MyRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="false" />
	</bean>
	<!-- 踢出用户 -->
	<bean id="kickoutSessionControlFilter" class="com.wanhejia.shiro.KickoutSessionControlFilter">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="kickoutAfter" value="false"/>
        <property name="maxSession" value="1"/>
        <property name="kickoutUrl" value="/login.shtml?kickout=1"/>
    </bean>
	<!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.shtml" />
		<property name="successUrl" value="/index.shtml" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<!-- 自定义权限配置 -->
		<!-- url=拦截器[参数]，拦截器[参数]”
			anon拦截器表示匿名访问（即不需要登录即可访问）
			authc拦截器表示需要身份认证通过后才能访问
			url模式匹配顺序是按照在配置中的声明顺序匹配
		 -->
		 <!-- shiro连接约束配置,在这里使用自定义的动态获取资源类-->
		<property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource" />
		<!-- 认证过滤器 -->
		<property name="filters">
            <util:map>
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
                <entry key="adminLogin" value-ref="adminLoginFilter"></entry>
            </util:map>
        </property>
	</bean>
	<!--自定义filterChainDefinitionMap -->
	<bean id="chainDefinitionSectionMetaSource" class="com.wanhejia.shiro.ChainDefinitionSectionMetaSource">
		<property name="filterChainDefinitions">
			<value>
			/favicon.ico = anon
    		/admin_files/** = anon
    		/fonts/** = anon
    		/js/** = anon
    		/css/** = anon
    		/img/** = anon
    		/404/** = anon
    		/error.jsp = anon
    		/js/** = anon
    		/layer-v1.9.2/** = anon
    		/logout.shtml = adminLogin
			/unauthorized.shtml = anon
			/ie.shtml = anon
			/login.shtml = adminLogin
			</value>
		</property>
	</bean>
	 <!-- 会话管理器 -->
	  <!--3.********* 全局的会话信息设置成30分钟,sessionValidationSchedulerEnabled参数就是是否开启扫描  -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/><!--会话的全局过期时间: 默认30分钟： -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionDAO" ref="sessionDAO"/>
    </bean>
    <!-- 使用java.util.UUID -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	 <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/><!-- 设置Session缓存名字 -->
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/><!-- 会话ID生成器 -->
    </bean>
    <!-- 会话验证调度器 shiro提供了会话验证调度器，用于定期的验证会话是否已过期,因为如果用户不主动退出是不知道会话是否过期的 -->
     <!-- 全局的会话信息检测扫描信息间隔30分钟-->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/><!-- 会话验证调度器进行会话验证时的会话管理器 -->
    </bean>
    <!--4.*********************************缓存管理器 -->
	<bean id="cacheManager" class="com.wanhejia.shiro.SpringCacheManagerWrapper" >
		<property name="cacheManager" ref="springCacheManager"/>
	</bean>
	 <bean id="springCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehcacheManager"/>
    </bean>
    <!--ehcache-->
    <bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml"/>
    </bean>
    <bean id="adminLoginFilter" class="com.wanhejia.shiro.FormAuthenticationFilter">
		<property name="loginUrl" value="/login.shtml" />
		<property name="successUrl" value="/index.shtml"/>
	</bean>
    <!-- 5.**********************Shiro生命周期处理器-->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>
